date.invalidInput=Invalid date format
date.invalidFormat=Date must be in ISO-8601 format
field.invalidInput=Invalid field value
order.direction.invalidInput=Order direction must be either ASC or DESC
ride.status.invalidInput=Invalid ride status
fare.type.invalidInput=Invalid fare type
ride.sortBy.invalidInput=Invalid sort field
page.positive=Page number must be positive or zero
page.max=Page number exceeds maximum allowed value ({0})
size.positive=Page size must be positive or zero
size.max=Page size exceeds maximum allowed value ({0})
id.positive=ID must be positive or zero
profile.id.maxValue=ID exceeds maximum allowed value ({0})
minPrice.notNull=Minimum price is required
minPrice.positive=Minimum price must be greater than zero
minPrice.maxValue=Minimum price exceeds maximum allowed value ({0})
free.waiting.notNull=Free waiting time is required
free.waiting.positive=Free waiting time must be positive
free.waiting.maxValue=Free waiting time exceeds maximum allowed value ({0})
paid.waiting.notNull=Paid waiting price is required
paid.waiting.positive=Paid waiting price must be greater than zero
paid.waiting.maxValue=Paid waiting price exceeds maximum allowed value ({0})
price.per.km.notNull=Price per kilometer is required
price.per.km.positive=Price per kilometer must be greater than zero
price.per.km.maxValue=Price per kilometer exceeds maximum allowed value ({0})
price.per.min.notNull=Price per minute is required
price.per.min.positive=Price per minute must be greater than zero
price.per.min.maxValue=Price per minute exceeds maximum allowed value ({0})
code.notBlank=Promo code cannot be blank
promo.code.invalidInput=Invalid promo code format
promo.code.invalidSize=Promo code length exceeds maximum allowed value ({0})
discount.notNull=Discount is required
discount.min=Discount must be at least {0}%
discount.max=Discount cannot exceed {0}%
valid.date.notNull=Valid until date is required
start.location.invalidSize=Start location length is invalid (min: {0}, max: {1})
location.list.invalidSize=Invalid location size, min length {0}, max {1}
location.list.notNull=List of end locations ,ust not be null
location.list.elements.notBlank=Elements in end location list must not be null
distance.notNull=Distance is required
distance.positive=Distance must be greater than zero
distance.maxValue=Distance exceeds maximum allowed value ({0})
payment.type.invalidInput=Invalid input of payment type
ride.notFound=Ride not found
fare.notFound=Fare not found
fare.alreadyExists=Fare already exists
promo.code.notFound=Promo code not found
promo.code.stillValid=Promo code is still valid
promo.code.noCurrentCode=No current promo code available
error.input.invalid=Invalid input
error.unknown=Unknown error occurred
error.notReadable=Error of json deserialization. Check the values types
type.mismatch=Type mismatch! Check types accordance
passenger.notFound=Passenger not found
